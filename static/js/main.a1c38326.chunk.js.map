{"version":3,"sources":["components/imageGallery/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/searchbar/Searchbar.js","components/modal/Modal.js","components/button/Button.js","services/pixabayApi.js","components/App.js","index.js"],"names":["ImageGalleryItem","webformatURL","tags","largeImageURL","toggleModal","className","src","alt","onClick","ImageGallery","pictures","map","picture","id","views","Searchbar","onFormSubmit","useState","query","setQuery","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","modalRoot","document","querySelector","Modal","closeModalByEsc","code","props","handleBackdropClick","target","window","addEventListener","this","removeEventListener","createPortal","url","Component","Button","children","loadMore","axios","defaults","baseURL","fetchPicturesApi","a","searchQuery","currentPage","get","then","response","data","hits","length","Promise","reject","App","setPictures","setSearchQuery","setCurrentPage","showModal","setShowModal","originalPictureSize","setOriginalPictureSize","originalPictureTag","setOriginalPictureTag","loaderIsVisible","setLoaderIsVisible","useEffect","scrollTo","top","documentElement","scrollHeight","behavior","resetState","prevState","onLoadMore","console","log","tag","shouldRenderShowMoreButton","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1c38326.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({\r\n  webformatURL,\r\n  tags,\r\n  largeImageURL,\r\n  toggleModal,\r\n}) => {\r\n  const onImgClick = () => {\r\n    toggleModal(largeImageURL, tags);\r\n  };\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={onImgClick}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ pictures, toggleModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {pictures.map((picture) => (\r\n        <ImageGalleryItem\r\n          key={picture.id + picture.views}\r\n          {...picture}\r\n          toggleModal={toggleModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  pictures: PropTypes.array.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Searchbar = ({ onFormSubmit }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  const onHandleChange = (e) => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const onHandleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onFormSubmit(query);\r\n    setQuery(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onHandleFormSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={onHandleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModalByEsc);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModalByEsc);\r\n  }\r\n\r\n  closeModalByEsc = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.toggleModal(\"\", \"\");\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.toggleModal(\"\", \"\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.url} alt={this.props.alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ children, loadMore }) => {\r\n  const onLoadMore = () => {\r\n    loadMore();\r\n  };\r\n\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onLoadMore}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  loadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\r\n\r\nconst fetchPicturesApi = async (searchQuery = \"\", currentPage = 1) => {\r\n  const response = await axios\r\n    .get(\r\n      `?q=${searchQuery}&page=${currentPage}&key=22061138-96faef093f4ee88d8ff48fa2c&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n\r\n  if (!response.length) return Promise.reject(\"No any matches found!\");\r\n  if (response.length) return response;\r\n};\r\n\r\nexport default fetchPicturesApi;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ImageGallery from \"./imageGallery/ImageGallery\";\r\nimport Searchbar from \"./searchbar/Searchbar\";\r\nimport Modal from \"./modal/Modal\";\r\nimport Button from \"./button/Button\";\r\nimport fetchPicturesApi from \"../services/pixabayApi\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function App() {\r\n  const [pictures, setPictures] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [originalPictureSize, setOriginalPictureSize] = useState(\"\");\r\n  const [originalPictureTag, setOriginalPictureTag] = useState(\"\");\r\n  const [loaderIsVisible, setLoaderIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n  });\r\n\r\n  const onFormSubmit = async (query) => {\r\n    resetState();\r\n    setSearchQuery(query);\r\n    const response = await fetchPicturesApi(query, currentPage);\r\n    setPictures((prevState) => [...prevState, ...response]);\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const resetState = () => {\r\n    setCurrentPage(1);\r\n    setPictures([]);\r\n  };\r\n\r\n  const onLoadMore = async () => {\r\n    setLoaderIsVisible(true);\r\n\r\n    const response = await fetchPicturesApi(searchQuery, currentPage);\r\n    console.log(response);\r\n    setPictures((prevState) => [...prevState, ...response]);\r\n    setLoaderIsVisible(false);\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const toggleModal = (url, tag) => {\r\n    setShowModal((prevState) => !prevState);\r\n    setOriginalPictureSize(url);\r\n    setOriginalPictureTag(tag);\r\n  };\r\n\r\n  const shouldRenderShowMoreButton = pictures.length > 0;\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onFormSubmit={onFormSubmit} />\r\n      <ImageGallery pictures={pictures} toggleModal={toggleModal} />\r\n      {shouldRenderShowMoreButton && (\r\n        <Button loadMore={onLoadMore}>\r\n          {loaderIsVisible ? (\r\n            <Loader type=\"ThreeDots\" color=\"#FFFFFF\" height={18} width={30} />\r\n          ) : (\r\n            <span>Load more</span>\r\n          )}\r\n        </Button>\r\n      )}\r\n\r\n      {showModal && (\r\n        <Modal\r\n          url={originalPictureSize}\r\n          alt={originalPictureTag}\r\n          toggleModal={toggleModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     pictures: [],\r\n//     searchQuery: \"\",\r\n//     currentPage: 1,\r\n//     showModal: false,\r\n//     originalPictureSize: \"\",\r\n//     originalPictureTag: \"\",\r\n//     loaderVisible: false,\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (prevState.searchQuery !== this.state.searchQuery) {\r\n//       this.fetchPictures();\r\n//     }\r\n\r\n// window.scrollTo({\r\n//   top: document.documentElement.scrollHeight,\r\n//   behavior: \"smooth\",\r\n// });\r\n//   }\r\n\r\n// onFormSubmit = (query) => {\r\n//   this.setState({ searchQuery: query, currentPage: 1, pictures: [] });\r\n// };\r\n\r\n// fetchPictures = () => {\r\n//   const { searchQuery, currentPage } = this.state;\r\n//   const options = { searchQuery, currentPage };\r\n\r\n//   this.setState({ loaderVisible: true });\r\n\r\n//   fetchPicturesApi(options)\r\n//     .then((response) =>\r\n//       this.setState((prevState) => ({\r\n//         pictures: [...prevState.pictures, ...response],\r\n//         currentPage: prevState.currentPage + 1,\r\n//       }))\r\n//     )\r\n//     .catch(console.log)\r\n//     .finally(() => this.setState({ loaderVisible: false }));\r\n// };\r\n\r\n// toggleModal = (url, tag) => {\r\n//   this.setState(({ showModal }) => ({\r\n//     showModal: !showModal,\r\n//     originalPictureSize: url,\r\n//     originalPictureTag: tag,\r\n//   }));\r\n// };\r\n\r\n//   render() {\r\n//     const { pictures, originalPictureSize, originalPictureTag, loaderVisible } =\r\n//       this.state;\r\n//\r\n\r\n//     return (\r\n// <>\r\n//   <Searchbar onSubmit={this.onFormSubmit} />\r\n//   <ImageGallery pictures={pictures} toggleModal={this.toggleModal} />\r\n//   {shouldRenderShowMoreButton && (\r\n//     <Button loadMore={this.fetchPictures}>\r\n//       {loaderVisible ? (\r\n//         <Loader type=\"ThreeDots\" color=\"#FFFFFF\" height={18} width={30} />\r\n//       ) : (\r\n//         <span>Load more</span>\r\n//       )}\r\n//     </Button>\r\n//   )}\r\n\r\n//   {this.state.showModal && (\r\n//     <Modal\r\n//       url={originalPictureSize}\r\n//       alt={originalPictureTag}\r\n//       toggleModal={this.toggleModal}\r\n//     />\r\n//   )}\r\n// </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}